[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "modelmeta"
version = "2.0.1"
requires-python = ">=3.10,<4.0"
readme = "README.md"
description = "An ORM representation of the model meta database"
authors = [
    {name = "James Hiebert", email = "hiebert@uvic.ca"},
    {name = "Rod Glover", email = "rglover@uvic.ca"},
    {name = "Eric Yvorchuk"},
    {name = "Lee Zeman", email = "lzeman@uvic.ca"},
    {name = "David Bronaugh"}
]
classifiers=[
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = [
    "sql",
    "database",
    "climate"
]
dependencies = [
    "setuptools>=79.0.1,<80.0.0",
    "pycrs>=1.0.2,<2.0.0",
    "alembic>=1.15.2,<2.0.0",
    "psycopg2>=2.9.10,<3.0.0",
    "sqlalchemy>=2.0.40,<3.0.0",
    "nchelpers>=5.5.11,<6.0.0",
]


[project.optional-dependencies]
test = [
    "pytest==8.3.5",
    "testing-postgresql==1.3.0",
    "alembic-verify>=0.1.4,<0.2.0",
    "sqlalchemy-diff>=0.1.5,<0.2.0",
    "sqlparse==0.5.3",
    "lxml==5.4.0",
    "black>=25.1.0,<26.0.0",
]
poe = [ "poethepoet==0.34.0"]


[[tool.poetry.source]]
name = "pcic"
url = "https://pypi.pacificclimate.org/simple"
priority = "supplemental"


[tool.poetry.scripts]
copyproddb="scripts.copyproddb:copy"
mktestdb="scripts.mktestdb:make_test"
list="scripts.list:list"
list_csv="scripts.list_csv:list"
index_netcdf="scripts.index_netcdf:index"
associate_ensemble="scripts.associate_ensemble:associate"
ncwms_configurator="scripts.ncwms_configurator:configurator"
generate_manifest="scripts.generate_manifest:generate"


[tool.pytest.ini_options]
markers = [
    "slow: marks tests that are slow (deselect with '-m \"not slow\"')",
]


[tool.poe.tasks]
dependencies = """
sudo apt-get install postgresql-16
		postgresql-client-16
		libhdf5-serial-dev
		libnetcdf-dev
		libspatialite-dev
		postgresql-16-postgis-3
"""
install = "poetry install"
test = "poetry run pytest"
setup = ["dependencies", "install", "test"]